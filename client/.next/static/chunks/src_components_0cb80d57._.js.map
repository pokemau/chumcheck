{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/mau/Code/chumcheck/client/src/components/ui/sonner.tsx"],"sourcesContent":["\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner, ToasterProps } from \"sonner\"\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      style={\n        {\n          \"--normal-bg\": \"var(--popover)\",\n          \"--normal-text\": \"var(--popover-foreground)\",\n          \"--normal-border\": \"var(--border)\",\n        } as React.CSSProperties\n      }\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,CAAA,GAAA,2RAAA,CAAA,WAAQ,AAAD;IAEpC,qBACE,4TAAC,2QAAA,CAAA,UAAM;QACL,OAAO;QACP,WAAU;QACV,OACE;YACE,eAAe;YACf,iBAAiB;YACjB,mBAAmB;QACrB;QAED,GAAG,KAAK;;;;;;AAGf;GAjBM;;QACyB,2RAAA,CAAA,WAAQ;;;KADjC","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///home/mau/Code/chumcheck/client/src/components/providers/QueryProvider.tsx"],"sourcesContent":["'use client'\n\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools'\nimport { useState } from 'react'\n\nexport default function QueryProvider({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  const [queryClient] = useState(\n    () =>\n      new QueryClient({\n        defaultOptions: {\n          queries: {\n            // With SSR, we usually want to set some default staleTime\n            // above 0 to avoid refetching immediately on the client\n            staleTime: 60 * 1000, // 1 minute\n            gcTime: 5 * 60 * 1000, // 5 minutes (previously cacheTime)\n          },\n        },\n      })\n  )\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AACA;;;AAJA;;;;AAMe,SAAS,cAAc,EACpC,QAAQ,EAGT;;IACC,MAAM,CAAC,YAAY,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD;kCAC3B,IACE,IAAI,yPAAA,CAAA,cAAW,CAAC;gBACd,gBAAgB;oBACd,SAAS;wBACP,0DAA0D;wBAC1D,wDAAwD;wBACxD,WAAW,KAAK;wBAChB,QAAQ,IAAI,KAAK;oBACnB;gBACF;YACF;;IAGJ,qBACE,4TAAC,yRAAA,CAAA,sBAAmB;QAAC,QAAQ;;YAC1B;0BACD,4TAAC,4WAAA,CAAA,qBAAkB;gBAAC,eAAe;;;;;;;;;;;;AAGzC;GAzBwB;KAAA","debugId":null}}]
}